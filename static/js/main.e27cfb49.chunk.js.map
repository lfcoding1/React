{"version":3,"sources":["posts/Item.js","posts/Board.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","save","renderForm","renderDisplay","randomBetween","style","right","window","innerWidth","top","innerHeight","transform","concat","x","y","s","Math","ceil","random","setState","onRemove","index","e","preventDefault","onChange","_newText","value","_this2","react_default","a","createElement","className","onSubmit","ref","input","children","onClick","id","Component","Board","items","description","deadline","done","add","eachItem","nextId","update","console","log","prevState","toConsumableArray","uniqueId","filter","item","map","objectSpread","i","posts_Item","key","Message","msg","App","App_Message","posts_Board","ReactDOM","render","App_App","document","getElementById","Boolean","location","hostname","match","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e27cfb49.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Item extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tediting: false\n\t\t}\n\t\tthis.edit = this.edit.bind(this)\n\t\tthis.remove = this.remove.bind(this)\n\t\tthis.save = this.save.bind(this)\n\t\tthis.renderForm = this.renderForm.bind(this)\n\t\tthis.renderDisplay = this.renderDisplay.bind(this)\n\t\tthis.randomBetween = this.randomBetween.bind(this)\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.style = {\n\t\t\tright: this.randomBetween(0, window.innerWidth - 150, 'px'),\n\t\t\ttop: this.randomBetween(0, window.innerHeight - 150, 'px'),\n\t\t\ttransform: `rotate(${this.randomBetween(-25, 25, 'deg')})`\n\t\t}\n\t}\n\n\trandomBetween(x, y, s){\n\t\treturn x + Math.ceil(Math.random() * (y-x)) + s\n\t}\n\n\n\tedit() {\n\t\tthis.setState({\n\t\t\tediting: true\n\t\t})\n\t}\n\n\tremove() {\n\t\tthis.props.onRemove(this.props.index)\n\t}\n\n\tsave(e) {\n        e.preventDefault()\n        this.props.onChange(this._newText.value, this.props.index)\n        this.setState({\n            editing: false\n        })\n\t}\n\n\trenderForm() {\n\t\treturn (\n\t\t\t<div className=\"item\" style={this.style}>\n\t\t\t\t<form onSubmit={this.save}>\n\t\t\t\t\t<textarea ref={input => this._newText =  input}/>\n\t\t\t\t\t<button>Save</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderDisplay() {\n\t\treturn (\n\t\t\t<div className=\"item\" style={this.style}>\n\t\t\t\t<p>{this.props.children}</p>\n\t\t\t\t<span>\n\t\t\t\t\t<button onClick={this.edit} id=\"edit\">Edit</button>\n\t\t\t\t\t<button onClick={this.remove} id=\"remove\">Remove</button>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t)\n\t}\n\trender() {\n\t\treturn this.state.editing ? this.renderForm() : this.renderDisplay()\n\t}\n\n}\n\nexport default Item\n\n\n\n\n\n","import React, { Component } from 'react'\nimport Item from './Item'\n\n\n\n\nclass Board extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            items: [\n                {\n                \"id\": 1,\n                \"description\": \"Get out of bed\",\n                \"deadline\": \"2017-09-11\",\n                \"done\": true\n                },\n                {\n                \"id\": 2,\n                \"description\": \"Brush teeth\",\n                \"deadline\": \"2017-09-10\",\n                \"done\": false\n                },\n                {\n                \"id\": 3,\n                \"description\": \"Eat breakfast\",\n                \"deadline\": \"2017-09-09\",\n                \"done\": false\n                }\n            ]\n        }\n        this.add = this.add.bind(this)\n        this.eachItem = this.eachItem.bind(this)\n        this.remove = this.remove.bind(this)\n        this.nextId= this.nextId.bind(this)\n        this.update = this.update.bind(this)\n    }\n\n    add(_newText){\n        console.log('adding new note')\n        this.setState(prevState => ({\n            items: [\n                ...prevState.items,\n                {\n                    \"id\": this.nextId(),\n                    \"description\": _newText,\n                    \"deadline\": \"\"\n                }\n            ]\n        }))\n    }\n    nextId() {\n    this.uniqueId = this.uniqueId || 4\n    return this.uniqueId++\n    }\n\n\n    remove(id) {\n        console.log('removing item:', id)\n        this.setState(prevState => ({\n            items: prevState.items.filter(item => item.id!==id)\n        }))\n    }\n\n    update(_newText, id) {\n        console.log('updating item at index', id, _newText)\n        this.setState(prevState => ({\n            items: prevState.items.map(\n                description => (description.id !== id) ? description: {...description, description: _newText},\n                \n            )\n        }))\n    }\n   \n    eachItem(items, i) {\n        return(\n            <Item key={items.id} index={items.id} onRemove={this.remove} onChange={this.update}>\n            Item: {items.id}<br></br>\n            {items.description}<br></br>\n            Deadline: {items.deadline}\n            </Item>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"board\">\n                <button className= 'add' onClick={this.add.bind(null, \"Click edit to add your item\")}\n                    id=\"add\">Add</button>\n                {this.state.items.map(this.eachItem)}\n            </div>\n        )\n    }\n}\n    \n\nexport default Board;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './posts/Board';\nimport './App.css';\n\n//component that populates h2 titles to the Todo App//\nconst Message = props => <h2>{props.msg}</h2>\n\n\n\n//main component//\nclass App extends Component { \n  \n\n  render() { \n      return (\n        <div className = \"App\">\n        <h1>To Do App</h1>\n        <Message msg=\"Dynamic List\" />\n        <Board  />\n        </div>\n      ); \n  } \n} \n\n\nReactDOM.render(<App />, document.getElementById('thisIsWhereReactIsInjected'));\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('thisIsWhereReactIsInjected'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}